name: qemu-system-aarch64

# Run this workflow every time a new commit pushed to your repository
on: push

jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  qemu-system-aarch64-version:
    # Name the Job
    name: qemu-system-aarch64 version
    # Set the type of machine to run on
    runs-on: ubuntu-latest

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: show uname
        run: uname -a

      - name: update apt
        run: sudo apt update

      - name: install misc package
        run: sudo apt-get install -y wget

      - name: install binfmt
        run: sudo apt-get install -y binfmt-support
      - name: modprobe binfmt
        run: sudo modprobe binfmt_misc

      - name: install qemu-user-static
        run: sudo apt install qemu-user-static
      - name: where qemu-aarch64-static
        run: which qemu-aarch64-static
      - name: show qemu-aarch64-static
        run: qemu-aarch64-static --version

      - name: get ubuntu arm64(aarch64) base
        run: wget http://cdimage.ubuntu.com/ubuntu-base/releases/20.04/release/ubuntu-base-20.04.1-base-arm64.tar.gz
      - name: mkdir ubuntu base
        run: mkdir ubuntu-20.04-arm64
      - name: uncompress
        run: tar xvzf ../ubuntu-base-20.04.1-base-arm64.tar.gz
        working-directory: ./ubuntu-20.04-arm64
      - name: ls
        run: ls
      - name: ls -l ./ubuntu-20.04-arm64
        run: ls -l 
        working-directory: ./ubuntu-20.04-arm64

      - name: show architecture by qemu-aarch64-static
        run: qemu-aarch64-static -L ./ bin/uname -a
        working-directory: ./ubuntu-20.04-arm64

      - name: rm symbolic /bin
        run: rm bin
        working-directory: ./ubuntu-20.04-arm64
      - name: fix /bin
        run: cp -pr usr/bin bin
        working-directory: ./ubuntu-20.04-arm64

      - name: rm symbolic /sbin
        run: rm sbin
        working-directory: ./ubuntu-20.04-arm64
      - name: fix /sbin
        run: cp -pr usr/sbin sbin
        working-directory: ./ubuntu-20.04-arm64

      - name: rm symbolic /lib
        run: rm lib
        working-directory: ./ubuntu-20.04-arm64
      - name: fix /lib
        run: cp -pr usr/lib lib
        working-directory: ./ubuntu-20.04-arm64

#      - name: ls ./ubuntu-20.04-arm64/bin
#        run: ls bin
#        working-directory: ./ubuntu-20.04-arm64

      - name: swtich root dir tree
        run: sudo chroot ./ubuntu-20.04-arm64
      - name: show architecture
        run: uname -a
